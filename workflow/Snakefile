configfile: "config/config.yaml"


rule all:
    input:
        "results/intensities_binned.txt",
        "results/highlights_binned.txt",
        "results/reference.pdf",
        "results/plot.pdf",


rule get_all_intensities:
    """Use Abins internals to write mode data to a DB"""
    input:
        config["abins"]["VibrationalOrPhononFile"],
    params:
        abins_kwargs=config["abins"],
        qpt=config["qpt"],
    output:
        "results/modes.db",
    conda:
        "envs/mantid.yml"
    shadow:
        "shallow"
    script:
        "scripts/get_all_intensities.py"


rule get_reference:
    """Use Abins Algorithm to compute fundamental and multi-phonon spectra"""
    input:
        config["abins"]["VibrationalOrPhononFile"],
    params:
        abins_kwargs=config["abins"],
    output:
        "results/ref_fundamentals.csv",
        "results/ref_multiphonon.csv",
    conda:
        "envs/mantid.yml"
    shadow:
        "shallow"
    script:
        "scripts/get_reference.py"


rule write_modes:
    input:
        "results/modes.db",
    output:
        csv="results/intensities.csv",
        txt="results/intensities.txt",
    params:
        plot=config["plot"],
        selection=None,
    conda:
        "envs/mantid.yml"
    script:
        "scripts/write_modes.py"


rule write_highlights:
    input:
        "results/modes.db",
    output:
        csv="results/highlights.csv",
        txt="results/highlights.txt",
    params:
        plot=config["plot"],
        selection=config["highlights"],
    conda:
        "envs/mantid.yml"
    script:
        "scripts/write_modes.py"


rule bin_and_broaden:
    """Bin modes to grid and apply resolution convolution"""
    input:
        "results/{prefix}.csv",
    output:
        "results/{prefix}_binned.txt",
    params:
        instrument=config["abins"]["Instrument"],
        bin_config=config["binning"],
    conda:
        "envs/mantid.yml"
    script:
        "scripts/bin_and_broaden.py"


rule plot_modes:
    input:
        highlights="results/highlights_binned.txt",
        fundamentals="results/ref_fundamentals.csv",
        multiphonon="results/ref_multiphonon.csv",
    output:
        plot="results/plot.pdf",
    params:
        plot=config["plot"],
    conda:
        "envs/mantid.yml"
    script:
        "scripts/plot_modes.py"


rule plot_reference:
    input:
        summed="results/intensities_binned.txt",
        fundamentals="results/ref_fundamentals.csv",
    output:
        plot="results/reference.pdf",
    params:
        plot=config["plot"],
    conda:
        "envs/mantid.yml"
    script:
        "scripts/plot_reference.py"
